<?php
/*
Lag en underklasse som arver en klasseegenskap og en klassemetode fra klassen Bruker. Lag en
klassemetode i den nye klassen som overstyrer Bruker-klassen. Gjør oppgaven relevant for prosjektet
du arbeider med
*/


// Inkluderer hovedklassen fra oppgave 1
require_once 'm6_oppg1.php';

class Kunde extends Bruker {
    // Nye egenskaper for Kunden
    public $email;
    public $phone;
    public $address;
    public $postnummer;
    public $password;

    // Konstruktør for å initialisere egenskaper
    public function __construct(
        $fornavn, $etternavn, $brukernavn, $fodselsdato,
        $email, $phone, $address, $postnummer, $password
    ) {
        // Kaller foreldreklassens konstruktør
        parent::__construct($fornavn, $etternavn, $brukernavn, $fodselsdato);

        // Initialiserer nye egenskaper
        $this->email = $email;
        $this->phone = $phone;
        $this->address = $address;
        $this->postnummer = $postnummer;
        $this->password = $password;
    }

    // Overstyrer metoden visInformasjon fra Bruker
    public function visInformasjon() {
        return "Kunde: {$this->fornavn} {$this->etternavn}<br>
                Brukernavn: {$this->brukernavn}<br>
                Fødselsdato: {$this->fodselsdato}<br>
                Registreringsdato: {$this->registreringsdato}<br>
                E-post: {$this->email}<br>
                Telefon: {$this->phone}<br>
                Adresse: {$this->address}, Postnummer: {$this->postnummer}<br>
                Alder: " . $this->beregnAlder() . " år <br><br>";
    }

    // Ny metode spesifikk for Kunden: Oppdater Info
    public function oppdaterKontaktInfo($nyEmail, $nyTelefon) {
        if(filter_var($nyEmail, FILTER_VALIDATE_EMAIL)){ // sjekker email
            $this->email = $nyEmail;
        } else {
            return "Epost <strong>$nyEmail</strong> ikke godkjent. <br>";
        }
        if(preg_match('/^[0-9]{8}$/', $nyTelefon)) { // sjekker mobilnr
            $this->phone = $nyTelefon; 
        } else {
            return "Mobilnummer <strong>$nyTelefon</strong> ikke godkjent, må være 8 siffer langt.</br>";
        }
            
        return "Kontaktinformasjonen er oppdatert.<br> Ny e-post: {$this->email}<br> Ny telefon: {$this->phone}<br><br>";
    }

    public function oppdaterKontaktinfo2($nyEmail, $nyTelefon) {
        $this->email = filter_var($nyEmail, FILTER_VALIDATE_EMAIL); 
    }
}


// Eksempel på bruk
$kunde = new Kunde(
    "Kari", "Hansen", "kari456", "1988-08-15",
    "kari@nordmann.com", "98765432", "Storgata 12", "1234", "passord123"
);

// Vis informasjon om kunden
echo $kunde->visInformasjon();
echo "\n\n";

// Oppdater kontaktinformasjon
echo $kunde->oppdaterKontaktInfo("kari.ny@nordmann.com", "12345678");



?>